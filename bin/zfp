#!/usr/bin/perl
use strict;
use warnings;

use Getopt::Long;

my $wdir; 
my $sfile;
my $rtn = GetOptions(
    "working-directory" => \$wdir,
    "source-file"       => \$sfile,
);

unless($sfile) {
    return {
        status => 1,
        errmsg => "file is null",
    };
}

chdir "$ENV{ZIXFRP_HOME}/var/elog/fund";

# 文件不存在
unless( -f $sfile) {
    return {
        status => 1,
        errmsg => "$sfile does not exists",
    };
}

# 解压文件
`tar -zxf $sfile`;
my $rtn = $? << 8;
if ($rtn != 0 ) {
    return {
        status => 1,
        errmsg => "can not tar -zxf $sfile",
    };
}

# 进入目录解开后的目录
my $dir = $sfile;
$dir =~ s/^\.tar\.gz$//g;
chdir $dir;
my $tmp = "$ENV{PWD}/tmp";
my $sfile =  IO::File->new("<fund.dat");
my ($r, $w) = pipe;
$r->blocking(1);
$w->autoflush(1);

my %children;
my $end = 0;
local $SIG{CHLD} = sub {
    while ( ( my $pid = waitpid( -1, WNOHANG ) ) > 0 ) { ; }
    for (keys %child) {
        if ( 0 == kill( 0, $_) ) {
            delete $children{$_};
        }
    }
    $end = 1 unless %children;
};
for my $i ( 0 .. $load->{concur}) {
    my $child = fork();
    unless($child) {
        unless(defined $child) {
        }
        # child
        close $w;
        open STDIN, "<&", $r;
        exec("logproc.pl  --index $i --proc $ENV{ZIXFRP_HOME}/conf/logproc/fund.pl --tmp $tmp");
    } 
    $children{$child} = 1;
}

# 开始分发任务
close($r);
while(<$sfile>) {
    $w->print($_);
}
close($w);

# 等待子进程结束
while(1) {
    last if $end;
    sleep 0.01;
}  

# 收集进程退出状态
@ok = <$tmp/*.ok>;
unless($load->{concur} == @ok) {
} 

# 合并处理明细
``; 


